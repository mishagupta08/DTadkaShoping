@using PagedList.Mvc;
@using DTShopping.Properties;
@model  DTShopping.Models.Dashboard
@{
    ViewBag.Title = "Orders";
    string Theme = System.Configuration.ConfigurationManager.AppSettings["Theme"] == null ? string.Empty : System.Configuration.ConfigurationManager.AppSettings["Theme"].ToString();
    if (Theme == Resources.Orange)
    {
        Layout = "~/Views/Shared/_LayoutOrange.cshtml";
        <style>
            h3 {
                font-size: 15px;
            }

            h1 {
                font-size: 25px;
            }
        </style>
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}
<link href="~/Content/PagedList.css" rel="stylesheet" />
<style>
    .ul.pagination {
        display: inline-block;
        padding: 0;
        margin: 0;
    }

    .page-link {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        color: black;
    }


    ul.pagination li {
        display: inline;
    }

        ul.pagination li a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
        }

            ul.pagination li a.active {
                background-color: #4CAF50;
                color: white;
            }

            ul.pagination li a:hover:not(.active) {
                background-color: #ddd;
            }
</style>


<div class="container">
    <div class="sixteen columns">
        <div id="bodyContent" class="sixteen columns omega main_part_wrapper">

            <h1>ORDER DETAILS</h1>

            @if (Model != null && Model.orderDetailListContainer != null && Model.orderDetailListContainer.Count > 0)
            {
                <table width="100%" border="0" cellspacing="5" cellpadding="5" class="shoptable" style="width: 100%; border-top: 1px solid rgb(204, 204, 204);">
                    <tr>
                        <td width="13%" bgcolor="#E9E9E9"><h3>ORDER NO </h3></td>
                        <td width="13%" bgcolor="#E9E9E9"><h3>PRODUCTS DETAIL </h3></td>
                        @*<td width="14%" bgcolor="#E9E9E9"><h3>PRODUCT NAME</h3></td>*@
                        <td width="11%" bgcolor="#E9E9E9"><h3>QUANTITY</h3></td>
                        <td width="10%" bgcolor="#E9E9E9"><h3>PRICE</h3></td>
                        <td width="13%" bgcolor="#E9E9E9"><h3>POINTS USED</h3></td>
                        <td width="13%" bgcolor="#E9E9E9"><h3>ORDER DATE</h3></td>
                        <td width="16%" bgcolor="#E9E9E9"><h3>SHIPPING CHARGES</h3></td>
                        <td width="12%" bgcolor="#E9E9E9"><h3>NET PRICE</h3></td>
                        <td width="11%" bgcolor="#E9E9E9"><h3>DISPACTH</h3></td>
                        <td width="11%" bgcolor="#E9E9E9"><h3>PAYMENT MODE</h3></td>
                        <td width="11%" bgcolor="#E9E9E9"><h3>PAYMENT STATUS</h3></td>
                        <td width="11%" bgcolor="#E9E9E9"><h3>ACTION</h3></td>
                    </tr>
                    @foreach (var order in Model.orderDetailListContainer)
                    {
                        foreach (var orderProd in order.OrderProducts)
                        {
                            <tr>
                                <td valign="middle" class="bordertop">@order.OrderDetail.id</td>
                                <td class="bordertop">
                                    @orderProd.productName
                                    @if (!string.IsNullOrEmpty(orderProd.Size))
                                    {
                                        <br />
                                        <span>Size : @orderProd.Size</span>
                                    }                                    
                                </td>
                                @*<td class="bordertop">@order.ProductName</td>*@
                                <td valign="middle" class="bordertop">@orderProd.quantity</td>
                                <td valign="middle" class="bordertop">@orderProd.price</td>
                                <td valign="middle" class="bordertop">@orderProd.RBV_Points</td>
                                <td valign="middle" class="bordertop">@orderProd.created.ToString("dd/MM/yyyy")</td>
                                <td valign="middle" class="bordertop">@orderProd.shipping_charge</td>
                                <td valign="middle" class="bordertop">@orderProd.Amt</td>
                                <td valign="middle" class="bordertop">@orderProd.DispatchStatusStr</td>
                                <td valign="middle" class="bordertop">@order.OrderDetail.payment_mode</td>
                                <td valign="middle" class="bordertop">@order.OrderDetail.PaymentStatus</td>
                                <td><a href="@Url.Action("GetOrderDetailPage", "Manage", new { id = order.OrderDetail.id})"><img src="~/images/print.png" title="@Resources.Print" height="20" width="20" /></a></td>
                            </tr>
                        }
                    }
                </table>
            }
            else
            {
                <table width="100%" border="0" cellspacing="0" cellpadding="0" class="shoptable" style="margin-bottom:20px">
                    <tr>
                        <td width="51%">Total 0 records available.</td>
                        <td width="49%">&nbsp;</td>
                    </tr>
                </table>
            }
        </div>
    </div>

    @if (Model != null && Model.orderDetailListContainer != null && Model.orderDetailListContainer.Count > 0)
    {
        <span class="page-link">Page @(Model.pagerCount.PageCount < Model.pagerCount.PageNumber ? 0 : Model.pagerCount.PageNumber) of @Model.pagerCount.PageCount</span>
        @Html.PagedListPager(Model.pagerCount, page => Url.Action("Orders", "Home", new { page }), new PagedListRenderOptions
   {
       DisplayLinkToFirstPage = PagedListDisplayMode.Never,
       DisplayLinkToLastPage = PagedListDisplayMode.Never,
       DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
       DisplayLinkToNextPage = PagedListDisplayMode.Always,
       MaximumPageNumbersToDisplay = 3
   })
    }

</div>

<script>
    $(document).ready(function () {
        $(".preloader").hide();
    });
</script>

